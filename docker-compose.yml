services:
  discovery-server:
    build: infra/discovery-server
    image: graduation-discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://discovery-server:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_INSTANCE_HOSTNAME=discovery-server

  config-server:
    build: infra/config-server
    image: graduation-config-server
    container_name: config-server
    depends_on:
      discovery-server:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_INSTANCE_HOSTNAME=config-server

  gateway-server:
    build: infra/gateway-server
    image: graduation-gateway-server
    container_name: gateway-server
    depends_on:
      config-server:
        condition: service_started
      discovery-server:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_INSTANCE_HOSTNAME=gateway-server
    entrypoint: sh -c "sleep 30 && java ${JAVA_OPTS} -jar /app.jar"

  stats-server:
    build: stats/stats-server
    image: graduation-stats
    container_name: stats-server
    ports:
      - "9090:9090"
    depends_on:
      stats-db:
        condition: service_started
      config-server:
        condition: service_started
      discovery-server:
        condition: service_healthy
    environment:
      - SERVER_PORT=9090
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_INSTANCE_HOSTNAME=stats-server
      - SPRING_DATASOURCE_URL=jdbc:postgresql://stats-db:5432/stats
      - SPRING_DATASOURCE_USERNAME=stats
      - SPRING_DATASOURCE_PASSWORD=stats
    entrypoint: sh -c "sleep 30 && java ${JAVA_OPTS} -jar /app.jar"

  stats-db:
    image: postgres:${POSTGRES_VERSION}
    container_name: stats-db
    ports:
      - "6432:5432"
    environment:
      - POSTGRES_DB=stats
      - POSTGRES_USER=stats
      - POSTGRES_PASSWORD=stats
    volumes:
      - stats-data:/var/lib/postgresql/data

  event-service:
    build: core/event-service
    image: graduation-event-service
    container_name: event-service
    depends_on:
      event-db:
        condition: service_started
      config-server:
        condition: service_started
      discovery-server:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_INSTANCE_HOSTNAME=event-service
      - SPRING_DATASOURCE_URL=jdbc:postgresql://event-db:5432/event
      - SPRING_DATASOURCE_USERNAME=event
      - SPRING_DATASOURCE_PASSWORD=event
    entrypoint: sh -c "sleep 30 && java ${JAVA_OPTS} -jar /app.jar"

  event-db:
    image: postgres:${POSTGRES_VERSION}
    container_name: event-db
    ports:
      - "5501:5432"
    environment:
      - POSTGRES_DB=event
      - POSTGRES_USER=event
      - POSTGRES_PASSWORD=event
    volumes:
      - event-data:/var/lib/postgresql/data

  comment-service:
    build: core/comment-service
    image: graduation-comment-service
    container_name: comment-service
    depends_on:
      comment-db:
        condition: service_started
      config-server:
        condition: service_started
      discovery-server:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_INSTANCE_HOSTNAME=comment-service
      - SPRING_DATASOURCE_URL=jdbc:postgresql://comment-db:5432/comment
      - SPRING_DATASOURCE_USERNAME=comment
      - SPRING_DATASOURCE_PASSWORD=comment
    entrypoint: sh -c "sleep 30 && java ${JAVA_OPTS} -jar /app.jar"

  comment-db:
    image: postgres:${POSTGRES_VERSION}
    container_name: comment-db
    ports:
      - "5502:5432"
    environment:
      - POSTGRES_DB=comment
      - POSTGRES_USER=comment
      - POSTGRES_PASSWORD=comment
    volumes:
      - comment-data:/var/lib/postgresql/data

  request-service:
    build: core/request-service
    image: graduation-request-service
    container_name: request-service
    depends_on:
      request-db:
        condition: service_started
      config-server:
        condition: service_started
      discovery-server:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_INSTANCE_HOSTNAME=request-service
      - SPRING_DATASOURCE_URL=jdbc:postgresql://request-db:5432/request
      - SPRING_DATASOURCE_USERNAME=request
      - SPRING_DATASOURCE_PASSWORD=request
    entrypoint: sh -c "sleep 30 && java ${JAVA_OPTS} -jar /app.jar"

  request-db:
    image: postgres:${POSTGRES_VERSION}
    container_name: request-db
    ports:
      - "5503:5432"
    environment:
      - POSTGRES_DB=request
      - POSTGRES_USER=request
      - POSTGRES_PASSWORD=request
    volumes:
      - request-data:/var/lib/postgresql/data

  user-service:
    build: core/user-service
    image: graduation-user-service
    container_name: user-service
    depends_on:
      user-db:
        condition: service_started
      config-server:
        condition: service_started
      discovery-server:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_INSTANCE_HOSTNAME=user-service
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/user
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=user
    entrypoint: sh -c "sleep 30 && java ${JAVA_OPTS} -jar /app.jar"

  user-db:
    image: postgres:${POSTGRES_VERSION}
    container_name: user-db
    ports:
      - "5504:5432"
    environment:
      - POSTGRES_DB=user
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=user
    volumes:
      - user-data:/var/lib/postgresql/data

  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092" # for client connections
      - "9101:9101" # JMX
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      - kafka
    command: "bash -c \
                'kafka-topics --create --topic stats.user-actions.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic stats.events-similarity.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092'"
    init: true

volumes:
  stats-data:
  event-data:
  comment-data:
  request-data:
  user-data: